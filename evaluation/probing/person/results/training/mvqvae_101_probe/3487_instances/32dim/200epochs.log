
number of params: 3584 
Namespace(batchsize=128, beta=0.25, dec_dropout_in=0.0, dec_dropout_out=0.0, dec_nh=512, device='cuda', embedding_dim=512, enc_dropout_in=0.0, enc_dropout_out=0.0, enc_nh=512, epochs=200, fig_path='evaluation/probing/person/results/training/mvqvae_101_probe/3487_instances/32dim/200epochs.png', log_path='evaluation/probing/person/results/training/mvqvae_101_probe/3487_instances/32dim/200epochs.log', logger=<common.utils.Logger object at 0x7f83a7dfec10>, lr=0.001, maxtrnsize=57769, maxtstsize=10000, maxvalsize=10000, mname='mvqvae_101_probe', model=VQVAE_Probe(
  (encoder): VQVAE_Encoder(
    (embed): Embedding(32, 256)
    (lstm): LSTM(256, 512, batch_first=True)
    (dropout_in): Dropout(p=0.0, inplace=False)
  )
  (linear_2): Linear(in_features=512, out_features=512, bias=True)
  (linear_3): Linear(in_features=512, out_features=512, bias=True)
  (linear_4): Linear(in_features=512, out_features=512, bias=True)
  (linear_5): Linear(in_features=512, out_features=512, bias=True)
  (linear_6): Linear(in_features=512, out_features=512, bias=True)
  (linear_7): Linear(in_features=512, out_features=512, bias=True)
  (linear_8): Linear(in_features=512, out_features=512, bias=True)
  (linear_9): Linear(in_features=512, out_features=512, bias=True)
  (linear_10): Linear(in_features=512, out_features=512, bias=True)
  (vq_layer): VectorQuantizer(
    (embedding): Embedding(704, 512)
  )
  (vq_layer_2): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_3): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_4): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_5): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_6): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_7): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_8): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_9): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_10): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_3_4_): VectorQuantizer(
    (embedding): Embedding(6, 512)
  )
  (linear): Linear(in_features=512, out_features=7, bias=False)
  (loss): CrossEntropyLoss()
), modelname='evaluation/probing/person/results/training/mvqvae_101_probe/3487_instances/32dim/', nh=512, ni=256, num_embeddings=704, nz=512, opt='Adam', pretrained_model=VQVAE(
  (encoder): VQVAE_Encoder(
    (embed): Embedding(32, 256)
    (lstm): LSTM(256, 512, batch_first=True)
    (dropout_in): Dropout(p=0.0, inplace=False)
  )
  (vq_layer): VectorQuantizer(
    (embedding): Embedding(704, 512)
  )
  (linear_2): Linear(in_features=512, out_features=512, bias=True)
  (linear_3): Linear(in_features=512, out_features=512, bias=True)
  (linear_4): Linear(in_features=512, out_features=512, bias=True)
  (linear_5): Linear(in_features=512, out_features=512, bias=True)
  (linear_6): Linear(in_features=512, out_features=512, bias=True)
  (linear_7): Linear(in_features=512, out_features=512, bias=True)
  (linear_8): Linear(in_features=512, out_features=512, bias=True)
  (linear_9): Linear(in_features=512, out_features=512, bias=True)
  (linear_10): Linear(in_features=512, out_features=512, bias=True)
  (vq_layer_2): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_3): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_4): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_5): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_6): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_7): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_8): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_9): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_10): VectorQuantizer(
    (embedding): Embedding(16, 512)
  )
  (vq_layer_3_4_): VectorQuantizer(
    (embedding): Embedding(6, 512)
  )
  (decoder): VQVAE_Decoder(
    (embed): Embedding(32, 256, padding_idx=0)
    (dropout_in): Dropout(p=0.0, inplace=False)
    (dropout_out): Dropout(p=0.0, inplace=False)
    (lstm): LSTM(768, 512, batch_first=True)
    (pred_linear): Linear(in_features=512, out_features=32, bias=False)
    (loss): CrossEntropyLoss()
  )
), save_path='evaluation/probing/person/results/training/mvqvae_101_probe/3487_instances/32dim/200epochs.pt', seq_to_no_pad='surface', task='surf2person', trndata='evaluation/probing/person/data/sosimple.new.trn.combined.txt', trnsize=3487, tstdata='evaluation/probing/person/data/sosimple.new.seenroots.val.txt', tstsize=209, valdata='evaluation/probing/person/data/sosimple.new.seenroots.val.txt', valsize=209)

encoder.embed.weight, torch.Size([32, 256]): False
encoder.lstm.weight_ih_l0, torch.Size([2048, 256]): False
encoder.lstm.weight_hh_l0, torch.Size([2048, 512]): False
encoder.lstm.bias_ih_l0, torch.Size([2048]): False
encoder.lstm.bias_hh_l0, torch.Size([2048]): False
linear_2.weight, torch.Size([512, 512]): False
linear_2.bias, torch.Size([512]): False
linear_3.weight, torch.Size([512, 512]): False
linear_3.bias, torch.Size([512]): False
linear_4.weight, torch.Size([512, 512]): False
linear_4.bias, torch.Size([512]): False
linear_5.weight, torch.Size([512, 512]): False
linear_5.bias, torch.Size([512]): False
linear_6.weight, torch.Size([512, 512]): False
linear_6.bias, torch.Size([512]): False
linear_7.weight, torch.Size([512, 512]): False
linear_7.bias, torch.Size([512]): False
linear_8.weight, torch.Size([512, 512]): False
linear_8.bias, torch.Size([512]): False
linear_9.weight, torch.Size([512, 512]): False
linear_9.bias, torch.Size([512]): False
linear_10.weight, torch.Size([512, 512]): False
linear_10.bias, torch.Size([512]): False
vq_layer.embedding.weight, torch.Size([704, 512]): False
vq_layer_2.embedding.weight, torch.Size([16, 512]): False
vq_layer_3.embedding.weight, torch.Size([16, 512]): False
vq_layer_4.embedding.weight, torch.Size([16, 512]): False
vq_layer_5.embedding.weight, torch.Size([16, 512]): False
vq_layer_6.embedding.weight, torch.Size([16, 512]): False
vq_layer_7.embedding.weight, torch.Size([16, 512]): False
vq_layer_8.embedding.weight, torch.Size([16, 512]): False
vq_layer_9.embedding.weight, torch.Size([16, 512]): False
vq_layer_10.embedding.weight, torch.Size([16, 512]): False
vq_layer_3_4_.embedding.weight, torch.Size([6, 512]): False
linear.weight, torch.Size([7, 512]): True
epoch: 0 avg_loss: 1.6353, acc: 0.3740 

epoch: 1 avg_loss: 1.3577, acc: 0.4709 

epoch: 2 avg_loss: 1.3300, acc: 0.4870 

epoch: 3 avg_loss: 1.3294, acc: 0.4976 

epoch: 4 avg_loss: 1.3202, acc: 0.4927 

epoch: 5 avg_loss: 1.3094, acc: 0.4847 

epoch: 6 avg_loss: 1.3169, acc: 0.4915 

epoch: 7 avg_loss: 1.3082, acc: 0.4941 

epoch: 8 avg_loss: 1.3091, acc: 0.4855 

epoch: 9 avg_loss: 1.3138, acc: 0.5062 

epoch: 10 avg_loss: 1.3189, acc: 0.4878 

epoch: 11 avg_loss: 1.3017, acc: 0.4832 

epoch: 12 avg_loss: 1.3031, acc: 0.4918 

epoch: 13 avg_loss: 1.3095, acc: 0.4763 

epoch: 14 avg_loss: 1.3077, acc: 0.4858 

epoch: 15 avg_loss: 1.3140, acc: 0.4884 

epoch: 16 avg_loss: 1.3181, acc: 0.4829 

epoch: 17 avg_loss: 1.3078, acc: 0.5050 

epoch: 18 avg_loss: 1.3062, acc: 0.4907 

epoch: 19 avg_loss: 1.3107, acc: 0.5047 

epoch: 20 avg_loss: 1.3189, acc: 0.4617 

epoch: 21 avg_loss: 1.3269, acc: 0.4907 

epoch: 22 avg_loss: 1.3039, acc: 0.4861 

epoch: 23 avg_loss: 1.3127, acc: 0.4993 

epoch: 24 avg_loss: 1.3259, acc: 0.4746 

epoch: 25 avg_loss: 1.3237, acc: 0.4907 

epoch: 26 avg_loss: 1.2966, acc: 0.4910 

epoch: 27 avg_loss: 1.3199, acc: 0.4947 

epoch: 28 avg_loss: 1.2944, acc: 0.4870 

epoch: 29 avg_loss: 1.3081, acc: 0.4961 

epoch: 30 avg_loss: 1.3093, acc: 0.4798 

epoch: 31 avg_loss: 1.3190, acc: 0.4583 

epoch: 32 avg_loss: 1.3114, acc: 0.5145 

epoch: 33 avg_loss: 1.3100, acc: 0.5067 

epoch: 34 avg_loss: 1.3349, acc: 0.4798 

epoch: 35 avg_loss: 1.3046, acc: 0.5001 

epoch: 36 avg_loss: 1.3143, acc: 0.4864 

epoch: 37 avg_loss: 1.3188, acc: 0.4749 

epoch: 38 avg_loss: 1.3151, acc: 0.5022 

epoch: 39 avg_loss: 1.3083, acc: 0.4978 

epoch: 40 avg_loss: 1.3072, acc: 0.4953 

epoch: 41 avg_loss: 1.3334, acc: 0.4847 

epoch: 42 avg_loss: 1.3016, acc: 0.4815 

epoch: 43 avg_loss: 1.3048, acc: 0.5182 

epoch: 44 avg_loss: 1.3036, acc: 0.4976 

epoch: 45 avg_loss: 1.3012, acc: 0.4907 

epoch: 46 avg_loss: 1.3153, acc: 0.5102 

epoch: 47 avg_loss: 1.3106, acc: 0.4718 

epoch: 48 avg_loss: 1.3113, acc: 0.5036 

epoch: 49 avg_loss: 1.3054, acc: 0.5007 

epoch: 50 avg_loss: 1.2951, acc: 0.4901 

epoch: 51 avg_loss: 1.3218, acc: 0.4938 

epoch: 52 avg_loss: 1.2953, acc: 0.4990 

epoch: 53 avg_loss: 1.3224, acc: 0.4990 

epoch: 54 avg_loss: 1.3111, acc: 0.4806 
