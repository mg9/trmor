
number of params: 1539 
Namespace(batchsize=512, beta=0.25, dec_dropout_in=0.0, dec_dropout_out=0.0, dec_nh=512, device='cuda', embedding_dim=512, enc_dropout_in=0.0, enc_dropout_out=0.0, enc_nh=512, epochs=300, fig_path='evaluation/probing/polarity/results/training/vqvae_16_1_probe/8513_instances/300epochs.png', log_path='evaluation/probing/polarity/results/training/vqvae_16_1_probe/8513_instances/300epochs.log', logger=<common.utils.Logger object at 0x7fe540a03e50>, lr=0.01, maxtrnsize=57769, maxtstsize=10000, maxvalsize=10000, mname='vqvae_16_1_probe', model=VQVAE_Probe(
  (encoder): VQVAE_Encoder(
    (embed): Embedding(32, 256)
    (lstm): LSTM(256, 512, batch_first=True)
    (dropout_in): Dropout(p=0.0, inplace=False)
  )
  (linear_root): Linear(in_features=512, out_features=32, bias=True)
  (vq_layer_root): VectorQuantizer(
    (embedding): Embedding(100, 32)
  )
  (ord_linears): ModuleList(
    (0): Linear(in_features=512, out_features=32, bias=True)
    (1): Linear(in_features=512, out_features=32, bias=True)
    (2): Linear(in_features=512, out_features=32, bias=True)
    (3): Linear(in_features=512, out_features=32, bias=True)
    (4): Linear(in_features=512, out_features=32, bias=True)
    (5): Linear(in_features=512, out_features=32, bias=True)
    (6): Linear(in_features=512, out_features=32, bias=True)
    (7): Linear(in_features=512, out_features=32, bias=True)
    (8): Linear(in_features=512, out_features=32, bias=True)
    (9): Linear(in_features=512, out_features=32, bias=True)
    (10): Linear(in_features=512, out_features=32, bias=True)
    (11): Linear(in_features=512, out_features=32, bias=True)
    (12): Linear(in_features=512, out_features=32, bias=True)
    (13): Linear(in_features=512, out_features=32, bias=True)
    (14): Linear(in_features=512, out_features=32, bias=True)
  )
  (ord_vq_layers): ModuleList(
    (0): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (1): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (2): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (3): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (4): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (5): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (6): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (7): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (8): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (9): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (10): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (11): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (12): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (13): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (14): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
  )
  (linear): Linear(in_features=512, out_features=3, bias=True)
  (loss): CrossEntropyLoss()
), modelname='evaluation/probing/polarity/results/training/vqvae_16_1_probe/8513_instances/', nh=512, ni=256, num_dicts=16, nz=512, opt='Adam', orddict_emb_num=100, pretrained_model=VQVAE(
  (encoder): VQVAE_Encoder(
    (embed): Embedding(32, 256)
    (lstm): LSTM(256, 512, batch_first=True)
    (dropout_in): Dropout(p=0.0, inplace=False)
  )
  (linear_root): Linear(in_features=512, out_features=32, bias=True)
  (vq_layer_root): VectorQuantizer(
    (embedding): Embedding(100, 32)
  )
  (ord_linears): ModuleList(
    (0): Linear(in_features=512, out_features=32, bias=True)
    (1): Linear(in_features=512, out_features=32, bias=True)
    (2): Linear(in_features=512, out_features=32, bias=True)
    (3): Linear(in_features=512, out_features=32, bias=True)
    (4): Linear(in_features=512, out_features=32, bias=True)
    (5): Linear(in_features=512, out_features=32, bias=True)
    (6): Linear(in_features=512, out_features=32, bias=True)
    (7): Linear(in_features=512, out_features=32, bias=True)
    (8): Linear(in_features=512, out_features=32, bias=True)
    (9): Linear(in_features=512, out_features=32, bias=True)
    (10): Linear(in_features=512, out_features=32, bias=True)
    (11): Linear(in_features=512, out_features=32, bias=True)
    (12): Linear(in_features=512, out_features=32, bias=True)
    (13): Linear(in_features=512, out_features=32, bias=True)
    (14): Linear(in_features=512, out_features=32, bias=True)
  )
  (ord_vq_layers): ModuleList(
    (0): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (1): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (2): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (3): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (4): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (5): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (6): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (7): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (8): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (9): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (10): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (11): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (12): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (13): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
    (14): VectorQuantizer(
      (embedding): Embedding(100, 32)
    )
  )
  (decoder): VQVAE_Decoder(
    (embed): Embedding(32, 256, padding_idx=0)
    (dropout_in): Dropout(p=0.0, inplace=False)
    (dropout_out): Dropout(p=0.0, inplace=False)
    (lstm): LSTM(768, 512, batch_first=True)
    (pred_linear): Linear(in_features=512, out_features=32, bias=False)
    (loss): CrossEntropyLoss()
  )
), rootdict_emb_dim=32, rootdict_emb_num=100, save_path='evaluation/probing/polarity/results/training/vqvae_16_1_probe/8513_instances/300epochs.pt', seq_to_no_pad='surface', task='surf2polar', trndata='model/vqvae/data/trmor2018.uniquesurfs.verbs.uniquerooted.trn.txt', trnsize=8513, tstdata='model/vqvae/data/trmor2018.uniquesurfs.verbs.seenroots.val.txt', tstsize=2757, valdata='model/vqvae/data/trmor2018.uniquesurfs.verbs.seenroots.val.txt', valsize=2757)

encoder.embed.weight, torch.Size([32, 256]): False
encoder.lstm.weight_ih_l0, torch.Size([2048, 256]): False
encoder.lstm.weight_hh_l0, torch.Size([2048, 512]): False
encoder.lstm.bias_ih_l0, torch.Size([2048]): False
encoder.lstm.bias_hh_l0, torch.Size([2048]): False
linear_root.weight, torch.Size([32, 512]): False
linear_root.bias, torch.Size([32]): False
vq_layer_root.embedding.weight, torch.Size([100, 32]): False
ord_linears.0.weight, torch.Size([32, 512]): False
ord_linears.0.bias, torch.Size([32]): False
ord_linears.1.weight, torch.Size([32, 512]): False
ord_linears.1.bias, torch.Size([32]): False
ord_linears.2.weight, torch.Size([32, 512]): False
ord_linears.2.bias, torch.Size([32]): False
ord_linears.3.weight, torch.Size([32, 512]): False
ord_linears.3.bias, torch.Size([32]): False
ord_linears.4.weight, torch.Size([32, 512]): False
ord_linears.4.bias, torch.Size([32]): False
ord_linears.5.weight, torch.Size([32, 512]): False
ord_linears.5.bias, torch.Size([32]): False
ord_linears.6.weight, torch.Size([32, 512]): False
ord_linears.6.bias, torch.Size([32]): False
ord_linears.7.weight, torch.Size([32, 512]): False
ord_linears.7.bias, torch.Size([32]): False
ord_linears.8.weight, torch.Size([32, 512]): False
ord_linears.8.bias, torch.Size([32]): False
ord_linears.9.weight, torch.Size([32, 512]): False
ord_linears.9.bias, torch.Size([32]): False
ord_linears.10.weight, torch.Size([32, 512]): False
ord_linears.10.bias, torch.Size([32]): False
ord_linears.11.weight, torch.Size([32, 512]): False
ord_linears.11.bias, torch.Size([32]): False
ord_linears.12.weight, torch.Size([32, 512]): False
ord_linears.12.bias, torch.Size([32]): False
ord_linears.13.weight, torch.Size([32, 512]): False
ord_linears.13.bias, torch.Size([32]): False
ord_linears.14.weight, torch.Size([32, 512]): False
ord_linears.14.bias, torch.Size([32]): False
ord_vq_layers.0.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.1.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.2.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.3.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.4.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.5.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.6.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.7.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.8.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.9.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.10.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.11.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.12.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.13.embedding.weight, torch.Size([100, 32]): False
ord_vq_layers.14.embedding.weight, torch.Size([100, 32]): False
linear.weight, torch.Size([3, 512]): True
linear.bias, torch.Size([3]): True
epoch: 0 avg_loss: 0.8100, acc: 0.8008 
val --- avg_loss: 0.6238, acc: 0.7878  
update best loss 

epoch: 1 avg_loss: 0.5968, acc: 0.8008 
val --- avg_loss: 0.5466, acc: 0.7878  
update best loss 

epoch: 2 avg_loss: 0.5523, acc: 0.8008 
val --- avg_loss: 0.5220, acc: 0.7878  
update best loss 

epoch: 3 avg_loss: 0.5328, acc: 0.8008 
val --- avg_loss: 0.5101, acc: 0.7878  
update best loss 

epoch: 4 avg_loss: 0.5233, acc: 0.8008 
val --- avg_loss: 0.5025, acc: 0.7878  
update best loss 

epoch: 5 avg_loss: 0.5166, acc: 0.8008 
val --- avg_loss: 0.4980, acc: 0.7878  
update best loss 

epoch: 6 avg_loss: 0.5117, acc: 0.8008 
val --- avg_loss: 0.4937, acc: 0.7878  
update best loss 

epoch: 7 avg_loss: 0.5084, acc: 0.8008 
val --- avg_loss: 0.4916, acc: 0.7878  
update best loss 

epoch: 8 avg_loss: 0.5063, acc: 0.8008 
val --- avg_loss: 0.4897, acc: 0.7878  
update best loss 

epoch: 9 avg_loss: 0.5039, acc: 0.8008 
val --- avg_loss: 0.4882, acc: 0.7878  
update best loss 

epoch: 10 avg_loss: 0.5025, acc: 0.8008 
val --- avg_loss: 0.4864, acc: 0.7878  
update best loss 

epoch: 11 avg_loss: 0.5008, acc: 0.8008 
val --- avg_loss: 0.4854, acc: 0.7878  
update best loss 

epoch: 12 avg_loss: 0.4987, acc: 0.8008 
val --- avg_loss: 0.4846, acc: 0.7878  
update best loss 

epoch: 13 avg_loss: 0.4978, acc: 0.8008 
val --- avg_loss: 0.4840, acc: 0.7878  
update best loss 

epoch: 14 avg_loss: 0.4966, acc: 0.8008 
val --- avg_loss: 0.4830, acc: 0.7878  
update best loss 

epoch: 15 avg_loss: 0.4953, acc: 0.8008 
val --- avg_loss: 0.4830, acc: 0.7878  

epoch: 16 avg_loss: 0.4943, acc: 0.8008 
val --- avg_loss: 0.4818, acc: 0.7878  
update best loss 

epoch: 17 avg_loss: 0.4944, acc: 0.8008 
val --- avg_loss: 0.4814, acc: 0.7878  
update best loss 

epoch: 18 avg_loss: 0.4947, acc: 0.8008 
val --- avg_loss: 0.4809, acc: 0.7878  
update best loss 

epoch: 19 avg_loss: 0.4921, acc: 0.8008 
val --- avg_loss: 0.4813, acc: 0.7878  

epoch: 20 avg_loss: 0.4917, acc: 0.8008 
val --- avg_loss: 0.4804, acc: 0.7878  
update best loss 

epoch: 21 avg_loss: 0.4912, acc: 0.8008 
val --- avg_loss: 0.4800, acc: 0.7878  
update best loss 

epoch: 22 avg_loss: 0.4910, acc: 0.8008 
val --- avg_loss: 0.4799, acc: 0.7878  
update best loss 

epoch: 23 avg_loss: 0.4890, acc: 0.8008 
val --- avg_loss: 0.4796, acc: 0.7878  
update best loss 

epoch: 24 avg_loss: 0.4918, acc: 0.8008 
val --- avg_loss: 0.4792, acc: 0.7878  
update best loss 

epoch: 25 avg_loss: 0.4888, acc: 0.8008 
val --- avg_loss: 0.4790, acc: 0.7878  
update best loss 

epoch: 26 avg_loss: 0.4883, acc: 0.8008 
val --- avg_loss: 0.4795, acc: 0.7878  

epoch: 27 avg_loss: 0.4868, acc: 0.8008 
val --- avg_loss: 0.4788, acc: 0.7878  
update best loss 

epoch: 28 avg_loss: 0.4861, acc: 0.8008 
val --- avg_loss: 0.4784, acc: 0.7878  
update best loss 

epoch: 29 avg_loss: 0.4854, acc: 0.8008 
val --- avg_loss: 0.4783, acc: 0.7878  
update best loss 

epoch: 30 avg_loss: 0.4854, acc: 0.8008 
val --- avg_loss: 0.4786, acc: 0.7878  

epoch: 31 avg_loss: 0.4847, acc: 0.8008 
val --- avg_loss: 0.4781, acc: 0.7878  
update best loss 

epoch: 32 avg_loss: 0.4845, acc: 0.8008 
val --- avg_loss: 0.4780, acc: 0.7878  
update best loss 

epoch: 33 avg_loss: 0.4842, acc: 0.8008 
val --- avg_loss: 0.4784, acc: 0.7878  

epoch: 34 avg_loss: 0.4855, acc: 0.8008 
val --- avg_loss: 0.4778, acc: 0.7878  
update best loss 
