
number of params: 384 
Namespace(batchsize=128, beta=0.25, dec_dropout_in=0.0, dec_dropout_out=0.0, dec_nh=512, device='cuda', embedding_dim=512, enc_dropout_in=0.0, enc_dropout_out=0.0, enc_nh=512, epochs=300, fig_path='evaluation/probing/tense/results/training/vqvae_9_dict_probe/3487_instances/300epochs.png', log_path='evaluation/probing/tense/results/training/vqvae_9_dict_probe/3487_instances/300epochs.log', logger=<common.utils.Logger object at 0x7f5cf5703f90>, lr=0.001, maxtrnsize=57769, maxtstsize=10000, maxvalsize=10000, mname='vqvae_9_dict_probe', model=VQVAE_Probe(
  (encoder): VQVAE_Encoder(
    (embed): Embedding(32, 256)
    (lstm): LSTM(256, 512, batch_first=True)
    (dropout_in): Dropout(p=0.0, inplace=False)
  )
  (linear_2): Linear(in_features=512, out_features=64, bias=True)
  (linear_3): Linear(in_features=512, out_features=64, bias=True)
  (linear_4): Linear(in_features=512, out_features=64, bias=True)
  (linear_5): Linear(in_features=512, out_features=64, bias=True)
  (linear_6): Linear(in_features=512, out_features=64, bias=True)
  (linear_7): Linear(in_features=512, out_features=64, bias=True)
  (linear_8): Linear(in_features=512, out_features=64, bias=True)
  (linear_9): Linear(in_features=512, out_features=64, bias=True)
  (vq_layer): VectorQuantizer(
    (embedding): Embedding(704, 512)
  )
  (vq_layer_2): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_3): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_4): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_5): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_6): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_7): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_8): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_9): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (linear): Linear(in_features=64, out_features=6, bias=False)
  (loss): CrossEntropyLoss()
), modelname='evaluation/probing/tense/results/training/vqvae_9_dict_probe/3487_instances/', nh=512, ni=256, num_embeddings=704, nz=512, opt='Adam', pretrained_model=VQVAE(
  (encoder): VQVAE_Encoder(
    (embed): Embedding(32, 256)
    (lstm): LSTM(256, 512, batch_first=True)
    (dropout_in): Dropout(p=0.0, inplace=False)
  )
  (vq_layer): VectorQuantizer(
    (embedding): Embedding(704, 512)
  )
  (linear_2): Linear(in_features=512, out_features=64, bias=True)
  (linear_3): Linear(in_features=512, out_features=64, bias=True)
  (linear_4): Linear(in_features=512, out_features=64, bias=True)
  (linear_5): Linear(in_features=512, out_features=64, bias=True)
  (linear_6): Linear(in_features=512, out_features=64, bias=True)
  (linear_7): Linear(in_features=512, out_features=64, bias=True)
  (linear_8): Linear(in_features=512, out_features=64, bias=True)
  (linear_9): Linear(in_features=512, out_features=64, bias=True)
  (vq_layer_2): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_3): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_4): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_5): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_6): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_7): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_8): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_9): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (decoder): VQVAE_Decoder(
    (embed): Embedding(32, 256, padding_idx=0)
    (dropout_in): Dropout(p=0.0, inplace=False)
    (dropout_out): Dropout(p=0.0, inplace=False)
    (lstm): LSTM(768, 512, batch_first=True)
    (pred_linear): Linear(in_features=512, out_features=32, bias=False)
    (loss): CrossEntropyLoss()
  )
), save_path='evaluation/probing/tense/results/training/vqvae_9_dict_probe/3487_instances/300epochs.pt', seq_to_no_pad='surface', task='surf2tense', trndata='evaluation/probing/tense/data/sosimple.new.trn.combined.txt', trnsize=3487, tstdata='evaluation/probing/tense/data/sosimple.new.seenroots.val.txt', tstsize=209, valdata='evaluation/probing/tense/data/sosimple.new.seenroots.val.txt', valsize=209)

encoder.embed.weight, torch.Size([32, 256]): False
encoder.lstm.weight_ih_l0, torch.Size([2048, 256]): False
encoder.lstm.weight_hh_l0, torch.Size([2048, 512]): False
encoder.lstm.bias_ih_l0, torch.Size([2048]): False
encoder.lstm.bias_hh_l0, torch.Size([2048]): False
linear_2.weight, torch.Size([64, 512]): False
linear_2.bias, torch.Size([64]): False
linear_3.weight, torch.Size([64, 512]): False
linear_3.bias, torch.Size([64]): False
linear_4.weight, torch.Size([64, 512]): False
linear_4.bias, torch.Size([64]): False
linear_5.weight, torch.Size([64, 512]): False
linear_5.bias, torch.Size([64]): False
linear_6.weight, torch.Size([64, 512]): False
linear_6.bias, torch.Size([64]): False
linear_7.weight, torch.Size([64, 512]): False
linear_7.bias, torch.Size([64]): False
linear_8.weight, torch.Size([64, 512]): False
linear_8.bias, torch.Size([64]): False
linear_9.weight, torch.Size([64, 512]): False
linear_9.bias, torch.Size([64]): False
vq_layer.embedding.weight, torch.Size([704, 512]): False
vq_layer_2.embedding.weight, torch.Size([16, 64]): False
vq_layer_3.embedding.weight, torch.Size([16, 64]): False
vq_layer_4.embedding.weight, torch.Size([16, 64]): False
vq_layer_5.embedding.weight, torch.Size([16, 64]): False
vq_layer_6.embedding.weight, torch.Size([16, 64]): False
vq_layer_7.embedding.weight, torch.Size([16, 64]): False
vq_layer_8.embedding.weight, torch.Size([16, 64]): False
vq_layer_9.embedding.weight, torch.Size([16, 64]): False
linear.weight, torch.Size([6, 64]): True
epoch: 0 avg_loss: 1.6365, acc: 0.3186 

epoch: 1 avg_loss: 1.4458, acc: 0.4956 

epoch: 2 avg_loss: 1.3279, acc: 0.5288 

epoch: 3 avg_loss: 1.2507, acc: 0.5512 

epoch: 4 avg_loss: 1.1958, acc: 0.5655 

epoch: 5 avg_loss: 1.1577, acc: 0.5750 

epoch: 6 avg_loss: 1.1276, acc: 0.5750 

epoch: 7 avg_loss: 1.1086, acc: 0.5750 

epoch: 8 avg_loss: 1.0897, acc: 0.5750 

epoch: 9 avg_loss: 1.0761, acc: 0.5750 

epoch: 10 avg_loss: 1.0653, acc: 0.5750 

epoch: 11 avg_loss: 1.0554, acc: 0.5549 

epoch: 12 avg_loss: 1.0490, acc: 0.5750 

epoch: 13 avg_loss: 1.0395, acc: 0.5750 

epoch: 14 avg_loss: 1.0371, acc: 0.5750 

epoch: 15 avg_loss: 1.0299, acc: 0.5572 

epoch: 16 avg_loss: 1.0231, acc: 0.5641 

epoch: 17 avg_loss: 1.0210, acc: 0.5672 

epoch: 18 avg_loss: 1.0191, acc: 0.5569 

epoch: 19 avg_loss: 1.0146, acc: 0.5678 

epoch: 20 avg_loss: 1.0105, acc: 0.5681 

epoch: 21 avg_loss: 1.0096, acc: 0.5750 

epoch: 22 avg_loss: 1.0073, acc: 0.5635 

epoch: 23 avg_loss: 1.0036, acc: 0.5753 

epoch: 24 avg_loss: 1.0019, acc: 0.5541 

epoch: 25 avg_loss: 1.0006, acc: 0.5675 

epoch: 26 avg_loss: 0.9984, acc: 0.5701 

epoch: 27 avg_loss: 0.9962, acc: 0.5704 

epoch: 28 avg_loss: 0.9962, acc: 0.5595 

epoch: 29 avg_loss: 0.9940, acc: 0.5704 

epoch: 30 avg_loss: 0.9917, acc: 0.5655 

epoch: 31 avg_loss: 0.9894, acc: 0.5635 

epoch: 32 avg_loss: 0.9898, acc: 0.5704 

epoch: 33 avg_loss: 0.9893, acc: 0.5704 

epoch: 34 avg_loss: 0.9880, acc: 0.5704 

epoch: 35 avg_loss: 0.9873, acc: 0.5704 

epoch: 36 avg_loss: 0.9840, acc: 0.5675 

epoch: 37 avg_loss: 0.9840, acc: 0.5592 

epoch: 38 avg_loss: 0.9866, acc: 0.5650 

epoch: 39 avg_loss: 0.9838, acc: 0.5704 

epoch: 40 avg_loss: 0.9834, acc: 0.5509 

epoch: 41 avg_loss: 0.9848, acc: 0.5664 

epoch: 42 avg_loss: 0.9823, acc: 0.5704 

epoch: 43 avg_loss: 0.9822, acc: 0.5569 

epoch: 44 avg_loss: 0.9823, acc: 0.5581 

epoch: 45 avg_loss: 0.9776, acc: 0.5721 

epoch: 46 avg_loss: 0.9778, acc: 0.5492 

epoch: 47 avg_loss: 0.9770, acc: 0.5589 

epoch: 48 avg_loss: 0.9797, acc: 0.5701 

epoch: 49 avg_loss: 0.9786, acc: 0.5489 

epoch: 50 avg_loss: 0.9780, acc: 0.5552 

epoch: 51 avg_loss: 0.9802, acc: 0.5601 

epoch: 52 avg_loss: 0.9756, acc: 0.5710 

epoch: 53 avg_loss: 0.9747, acc: 0.5704 

epoch: 54 avg_loss: 0.9755, acc: 0.5472 

epoch: 55 avg_loss: 0.9726, acc: 0.5730 

epoch: 56 avg_loss: 0.9731, acc: 0.5693 

epoch: 57 avg_loss: 0.9710, acc: 0.5661 

epoch: 58 avg_loss: 0.9717, acc: 0.5618 

epoch: 59 avg_loss: 0.9714, acc: 0.5429 

epoch: 60 avg_loss: 0.9733, acc: 0.5569 

epoch: 61 avg_loss: 0.9710, acc: 0.5543 

epoch: 62 avg_loss: 0.9734, acc: 0.5635 

epoch: 63 avg_loss: 0.9724, acc: 0.5426 

epoch: 64 avg_loss: 0.9688, acc: 0.5767 

epoch: 65 avg_loss: 0.9727, acc: 0.5701 

epoch: 66 avg_loss: 0.9693, acc: 0.5716 

epoch: 67 avg_loss: 0.9711, acc: 0.5684 

epoch: 68 avg_loss: 0.9679, acc: 0.5621 

epoch: 69 avg_loss: 0.9673, acc: 0.5721 

epoch: 70 avg_loss: 0.9694, acc: 0.5566 

epoch: 71 avg_loss: 0.9697, acc: 0.5615 

epoch: 72 avg_loss: 0.9663, acc: 0.5822 

epoch: 73 avg_loss: 0.9701, acc: 0.5721 

epoch: 74 avg_loss: 0.9670, acc: 0.5621 

epoch: 75 avg_loss: 0.9676, acc: 0.5721 

epoch: 76 avg_loss: 0.9688, acc: 0.5675 

epoch: 77 avg_loss: 0.9656, acc: 0.5802 

epoch: 78 avg_loss: 0.9676, acc: 0.5621 

epoch: 79 avg_loss: 0.9703, acc: 0.5569 

epoch: 80 avg_loss: 0.9658, acc: 0.5609 

epoch: 81 avg_loss: 0.9648, acc: 0.5635 

epoch: 82 avg_loss: 0.9651, acc: 0.5655 

epoch: 83 avg_loss: 0.9666, acc: 0.5675 

epoch: 84 avg_loss: 0.9658, acc: 0.5721 

epoch: 85 avg_loss: 0.9648, acc: 0.5661 

epoch: 86 avg_loss: 0.9637, acc: 0.5713 

epoch: 87 avg_loss: 0.9665, acc: 0.5518 

epoch: 88 avg_loss: 0.9649, acc: 0.5678 

epoch: 89 avg_loss: 0.9668, acc: 0.5655 

epoch: 90 avg_loss: 0.9638, acc: 0.5592 

epoch: 91 avg_loss: 0.9637, acc: 0.5721 

epoch: 92 avg_loss: 0.9631, acc: 0.5761 

epoch: 93 avg_loss: 0.9621, acc: 0.5667 

epoch: 94 avg_loss: 0.9614, acc: 0.5721 

epoch: 95 avg_loss: 0.9607, acc: 0.5721 

epoch: 96 avg_loss: 0.9620, acc: 0.5658 

epoch: 97 avg_loss: 0.9613, acc: 0.5767 

epoch: 98 avg_loss: 0.9615, acc: 0.5543 

epoch: 99 avg_loss: 0.9616, acc: 0.5730 

epoch: 100 avg_loss: 0.9605, acc: 0.5721 

epoch: 101 avg_loss: 0.9635, acc: 0.5753 

epoch: 102 avg_loss: 0.9614, acc: 0.5698 

epoch: 103 avg_loss: 0.9620, acc: 0.5629 

epoch: 104 avg_loss: 0.9611, acc: 0.5721 

epoch: 105 avg_loss: 0.9606, acc: 0.5721 

epoch: 106 avg_loss: 0.9613, acc: 0.5486 

epoch: 107 avg_loss: 0.9616, acc: 0.5518 

epoch: 108 avg_loss: 0.9592, acc: 0.5612 

epoch: 109 avg_loss: 0.9592, acc: 0.5681 

epoch: 110 avg_loss: 0.9601, acc: 0.5678 

epoch: 111 avg_loss: 0.9577, acc: 0.5690 

epoch: 112 avg_loss: 0.9602, acc: 0.5678 

epoch: 113 avg_loss: 0.9592, acc: 0.5727 

epoch: 114 avg_loss: 0.9603, acc: 0.5713 

epoch: 115 avg_loss: 0.9633, acc: 0.5515 

epoch: 116 avg_loss: 0.9630, acc: 0.5767 

epoch: 117 avg_loss: 0.9599, acc: 0.5664 

epoch: 118 avg_loss: 0.9621, acc: 0.5638 

epoch: 119 avg_loss: 0.9592, acc: 0.5460 

epoch: 120 avg_loss: 0.9594, acc: 0.5721 

epoch: 121 avg_loss: 0.9574, acc: 0.5767 

epoch: 122 avg_loss: 0.9588, acc: 0.5767 

epoch: 123 avg_loss: 0.9573, acc: 0.5609 

epoch: 124 avg_loss: 0.9623, acc: 0.5566 

epoch: 125 avg_loss: 0.9579, acc: 0.5681 

epoch: 126 avg_loss: 0.9587, acc: 0.5629 

epoch: 127 avg_loss: 0.9571, acc: 0.5767 

epoch: 128 avg_loss: 0.9563, acc: 0.5767 

epoch: 129 avg_loss: 0.9572, acc: 0.5767 

epoch: 130 avg_loss: 0.9565, acc: 0.5767 

epoch: 131 avg_loss: 0.9580, acc: 0.5672 

epoch: 132 avg_loss: 0.9567, acc: 0.5721 

epoch: 133 avg_loss: 0.9561, acc: 0.5480 

epoch: 134 avg_loss: 0.9566, acc: 0.5618 

epoch: 135 avg_loss: 0.9583, acc: 0.5566 

epoch: 136 avg_loss: 0.9581, acc: 0.5730 

epoch: 137 avg_loss: 0.9569, acc: 0.5767 

epoch: 138 avg_loss: 0.9566, acc: 0.5767 

epoch: 139 avg_loss: 0.9601, acc: 0.5667 

epoch: 140 avg_loss: 0.9568, acc: 0.5721 

epoch: 141 avg_loss: 0.9587, acc: 0.5767 

epoch: 142 avg_loss: 0.9585, acc: 0.5581 

epoch: 143 avg_loss: 0.9546, acc: 0.5670 

epoch: 144 avg_loss: 0.9566, acc: 0.5621 

epoch: 145 avg_loss: 0.9553, acc: 0.5635 

epoch: 146 avg_loss: 0.9557, acc: 0.5612 

epoch: 147 avg_loss: 0.9596, acc: 0.5678 

epoch: 148 avg_loss: 0.9576, acc: 0.5672 

epoch: 149 avg_loss: 0.9560, acc: 0.5629 

epoch: 150 avg_loss: 0.9550, acc: 0.5675 

epoch: 151 avg_loss: 0.9567, acc: 0.5698 

epoch: 152 avg_loss: 0.9583, acc: 0.5693 

epoch: 153 avg_loss: 0.9576, acc: 0.5483 

epoch: 154 avg_loss: 0.9540, acc: 0.5767 

epoch: 155 avg_loss: 0.9560, acc: 0.5521 

epoch: 156 avg_loss: 0.9558, acc: 0.5394 

epoch: 157 avg_loss: 0.9580, acc: 0.5569 

epoch: 158 avg_loss: 0.9557, acc: 0.5767 

epoch: 159 avg_loss: 0.9558, acc: 0.5767 

epoch: 160 avg_loss: 0.9537, acc: 0.5767 

epoch: 161 avg_loss: 0.9543, acc: 0.5566 

epoch: 162 avg_loss: 0.9548, acc: 0.5759 

epoch: 163 avg_loss: 0.9545, acc: 0.5764 

epoch: 164 avg_loss: 0.9560, acc: 0.5710 

epoch: 165 avg_loss: 0.9600, acc: 0.5721 

epoch: 166 avg_loss: 0.9546, acc: 0.5638 

epoch: 167 avg_loss: 0.9541, acc: 0.5698 

epoch: 168 avg_loss: 0.9577, acc: 0.5675 

epoch: 169 avg_loss: 0.9552, acc: 0.5641 

epoch: 170 avg_loss: 0.9566, acc: 0.5655 

epoch: 171 avg_loss: 0.9558, acc: 0.5552 

epoch: 172 avg_loss: 0.9538, acc: 0.5784 

epoch: 173 avg_loss: 0.9538, acc: 0.5687 

epoch: 174 avg_loss: 0.9552, acc: 0.5561 

epoch: 175 avg_loss: 0.9525, acc: 0.5767 

epoch: 176 avg_loss: 0.9543, acc: 0.5512 

epoch: 177 avg_loss: 0.9534, acc: 0.5684 

epoch: 178 avg_loss: 0.9550, acc: 0.5609 

epoch: 179 avg_loss: 0.9526, acc: 0.5641 

epoch: 180 avg_loss: 0.9534, acc: 0.5767 

epoch: 181 avg_loss: 0.9574, acc: 0.5664 

epoch: 182 avg_loss: 0.9548, acc: 0.5480 

epoch: 183 avg_loss: 0.9564, acc: 0.5635 

epoch: 184 avg_loss: 0.9559, acc: 0.5767 

epoch: 185 avg_loss: 0.9530, acc: 0.5767 

epoch: 186 avg_loss: 0.9529, acc: 0.5575 

epoch: 187 avg_loss: 0.9538, acc: 0.5707 

epoch: 188 avg_loss: 0.9525, acc: 0.5566 

epoch: 189 avg_loss: 0.9552, acc: 0.5635 

epoch: 190 avg_loss: 0.9520, acc: 0.5756 

epoch: 191 avg_loss: 0.9567, acc: 0.5650 

epoch: 192 avg_loss: 0.9549, acc: 0.5635 

epoch: 193 avg_loss: 0.9538, acc: 0.5761 

epoch: 194 avg_loss: 0.9536, acc: 0.5727 

epoch: 195 avg_loss: 0.9523, acc: 0.5704 

epoch: 196 avg_loss: 0.9515, acc: 0.5767 

epoch: 197 avg_loss: 0.9519, acc: 0.5678 

epoch: 198 avg_loss: 0.9518, acc: 0.5701 

epoch: 199 avg_loss: 0.9537, acc: 0.5767 

epoch: 200 avg_loss: 0.9520, acc: 0.5767 

epoch: 201 avg_loss: 0.9510, acc: 0.5569 

epoch: 202 avg_loss: 0.9511, acc: 0.5767 

epoch: 203 avg_loss: 0.9544, acc: 0.5767 

epoch: 204 avg_loss: 0.9544, acc: 0.5552 

epoch: 205 avg_loss: 0.9513, acc: 0.5652 

epoch: 206 avg_loss: 0.9535, acc: 0.5575 

epoch: 207 avg_loss: 0.9516, acc: 0.5695 

epoch: 208 avg_loss: 0.9539, acc: 0.5647 

epoch: 209 avg_loss: 0.9539, acc: 0.5727 

epoch: 210 avg_loss: 0.9541, acc: 0.5652 

epoch: 211 avg_loss: 0.9501, acc: 0.5781 

epoch: 212 avg_loss: 0.9532, acc: 0.5767 

epoch: 213 avg_loss: 0.9506, acc: 0.5767 

epoch: 214 avg_loss: 0.9532, acc: 0.5690 

epoch: 215 avg_loss: 0.9523, acc: 0.5727 

epoch: 216 avg_loss: 0.9527, acc: 0.5667 

epoch: 217 avg_loss: 0.9506, acc: 0.5767 

epoch: 218 avg_loss: 0.9517, acc: 0.5710 

epoch: 219 avg_loss: 0.9519, acc: 0.5523 

epoch: 220 avg_loss: 0.9540, acc: 0.5767 

epoch: 221 avg_loss: 0.9514, acc: 0.5819 

epoch: 222 avg_loss: 0.9512, acc: 0.5618 

epoch: 223 avg_loss: 0.9529, acc: 0.5779 
