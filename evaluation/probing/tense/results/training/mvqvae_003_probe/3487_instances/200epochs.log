
number of params: 3072 
Namespace(batchsize=128, beta=0.25, dec_dropout_in=0.0, dec_dropout_out=0.0, dec_nh=512, device='cuda', embedding_dim=512, enc_dropout_in=0.0, enc_dropout_out=0.0, enc_nh=512, epochs=200, fig_path='evaluation/probing/tense/results/training/mvqvae_003_probe/3487_instances/200epochs.png', log_path='evaluation/probing/tense/results/training/mvqvae_003_probe/3487_instances/200epochs.log', logger=<common.utils.Logger object at 0x7fc904181fd0>, lr=0.001, maxtrnsize=57769, maxtstsize=10000, maxvalsize=10000, mname='mvqvae_003_probe', model=VQVAE_Probe(
  (encoder): VQVAE_Encoder(
    (embed): Embedding(32, 256)
    (lstm): LSTM(256, 512, batch_first=True)
    (dropout_in): Dropout(p=0.0, inplace=False)
  )
  (linear_2): Linear(in_features=512, out_features=512, bias=False)
  (linear_3): Linear(in_features=512, out_features=512, bias=False)
  (linear_4): Linear(in_features=512, out_features=512, bias=False)
  (vq_layer): VectorQuantizer(
    (embedding): Embedding(710, 512)
  )
  (vq_layer_2): VectorQuantizer(
    (embedding): Embedding(5, 512)
  )
  (vq_layer_3): VectorQuantizer(
    (embedding): Embedding(6, 512)
  )
  (vq_layer_4): VectorQuantizer(
    (embedding): Embedding(2, 512)
  )
  (linear): Linear(in_features=512, out_features=6, bias=False)
  (loss): CrossEntropyLoss()
), modelname='evaluation/probing/tense/results/training/mvqvae_003_probe/3487_instances/', nh=512, ni=256, num_embeddings=710, nz=512, opt='Adam', pretrained_model=VQVAE(
  (encoder): VQVAE_Encoder(
    (embed): Embedding(32, 256)
    (lstm): LSTM(256, 512, batch_first=True)
    (dropout_in): Dropout(p=0.0, inplace=False)
  )
  (vq_layer): VectorQuantizer(
    (embedding): Embedding(710, 512)
  )
  (linear_2): Linear(in_features=512, out_features=512, bias=False)
  (linear_3): Linear(in_features=512, out_features=512, bias=False)
  (linear_4): Linear(in_features=512, out_features=512, bias=False)
  (vq_layer_2): VectorQuantizer(
    (embedding): Embedding(5, 512)
  )
  (vq_layer_3): VectorQuantizer(
    (embedding): Embedding(6, 512)
  )
  (vq_layer_4): VectorQuantizer(
    (embedding): Embedding(2, 512)
  )
  (decoder): VQVAE_Decoder(
    (embed): Embedding(32, 256, padding_idx=0)
    (dropout_in): Dropout(p=0.0, inplace=False)
    (dropout_out): Dropout(p=0.0, inplace=False)
    (lstm): LSTM(768, 512, batch_first=True)
    (pred_linear): Linear(in_features=512, out_features=32, bias=False)
    (loss): CrossEntropyLoss()
  )
), save_path='evaluation/probing/tense/results/training/mvqvae_003_probe/3487_instances/200epochs.pt', seq_to_no_pad='surface', task='surf2tense', trndata='evaluation/probing/tense/data/sosimple.new.trn.combined.txt', trnsize=3487, tstdata='evaluation/probing/tense/data/sosimple.new.seenroots.val.txt', tstsize=209, valdata='evaluation/probing/tense/data/sosimple.new.seenroots.val.txt', valsize=209)

encoder.embed.weight, torch.Size([32, 256]): False
encoder.lstm.weight_ih_l0, torch.Size([2048, 256]): False
encoder.lstm.weight_hh_l0, torch.Size([2048, 512]): False
encoder.lstm.bias_ih_l0, torch.Size([2048]): False
encoder.lstm.bias_hh_l0, torch.Size([2048]): False
linear_2.weight, torch.Size([512, 512]): False
linear_3.weight, torch.Size([512, 512]): False
linear_4.weight, torch.Size([512, 512]): False
vq_layer.embedding.weight, torch.Size([710, 512]): False
vq_layer_2.embedding.weight, torch.Size([5, 512]): False
vq_layer_3.embedding.weight, torch.Size([6, 512]): False
vq_layer_4.embedding.weight, torch.Size([2, 512]): False
linear.weight, torch.Size([6, 512]): True
epoch: 0 avg_loss: 1.4254, acc: 0.4264 

epoch: 1 avg_loss: 1.0325, acc: 0.5931 

epoch: 2 avg_loss: 0.9536, acc: 0.6280 

epoch: 3 avg_loss: 0.8896, acc: 0.6301 

epoch: 4 avg_loss: 0.8527, acc: 0.6587 

epoch: 5 avg_loss: 0.8225, acc: 0.6656 

epoch: 6 avg_loss: 0.8024, acc: 0.6782 

epoch: 7 avg_loss: 0.7764, acc: 0.6874 

epoch: 8 avg_loss: 0.7697, acc: 0.6860 

epoch: 9 avg_loss: 0.7650, acc: 0.6866 

epoch: 10 avg_loss: 0.7469, acc: 0.6937 

epoch: 11 avg_loss: 0.7383, acc: 0.6914 

epoch: 12 avg_loss: 0.7350, acc: 0.6960 

epoch: 13 avg_loss: 0.7242, acc: 0.7000 

epoch: 14 avg_loss: 0.7042, acc: 0.7072 

epoch: 15 avg_loss: 0.7012, acc: 0.7089 

epoch: 16 avg_loss: 0.7057, acc: 0.7055 

epoch: 17 avg_loss: 0.6955, acc: 0.7066 

epoch: 18 avg_loss: 0.7033, acc: 0.7023 

epoch: 19 avg_loss: 0.7009, acc: 0.7055 

epoch: 20 avg_loss: 0.6921, acc: 0.7126 

epoch: 21 avg_loss: 0.6772, acc: 0.7104 

epoch: 22 avg_loss: 0.6817, acc: 0.7138 

epoch: 23 avg_loss: 0.6732, acc: 0.7144 

epoch: 24 avg_loss: 0.6722, acc: 0.7167 

epoch: 25 avg_loss: 0.6732, acc: 0.7135 

epoch: 26 avg_loss: 0.6673, acc: 0.7149 

epoch: 27 avg_loss: 0.6634, acc: 0.7224 

epoch: 28 avg_loss: 0.6658, acc: 0.7164 

epoch: 29 avg_loss: 0.6564, acc: 0.7250 

epoch: 30 avg_loss: 0.6667, acc: 0.7147 

epoch: 31 avg_loss: 0.6471, acc: 0.7227 

epoch: 32 avg_loss: 0.6555, acc: 0.7164 

epoch: 33 avg_loss: 0.6673, acc: 0.7118 

epoch: 34 avg_loss: 0.6491, acc: 0.7238 

epoch: 35 avg_loss: 0.6408, acc: 0.7270 

epoch: 36 avg_loss: 0.6467, acc: 0.7213 

epoch: 37 avg_loss: 0.6420, acc: 0.7210 

epoch: 38 avg_loss: 0.6424, acc: 0.7215 

epoch: 39 avg_loss: 0.6357, acc: 0.7261 

epoch: 40 avg_loss: 0.6375, acc: 0.7218 

epoch: 41 avg_loss: 0.6493, acc: 0.7195 

epoch: 42 avg_loss: 0.6377, acc: 0.7264 

epoch: 43 avg_loss: 0.6284, acc: 0.7284 

epoch: 44 avg_loss: 0.6342, acc: 0.7233 

epoch: 45 avg_loss: 0.6267, acc: 0.7270 

epoch: 46 avg_loss: 0.6285, acc: 0.7304 

epoch: 47 avg_loss: 0.6206, acc: 0.7296 

epoch: 48 avg_loss: 0.6348, acc: 0.7250 

epoch: 49 avg_loss: 0.6235, acc: 0.7296 

epoch: 50 avg_loss: 0.6180, acc: 0.7339 

epoch: 51 avg_loss: 0.6165, acc: 0.7359 

epoch: 52 avg_loss: 0.6142, acc: 0.7330 

epoch: 53 avg_loss: 0.6180, acc: 0.7299 

epoch: 54 avg_loss: 0.6198, acc: 0.7324 

epoch: 55 avg_loss: 0.6160, acc: 0.7324 

epoch: 56 avg_loss: 0.6161, acc: 0.7319 

epoch: 57 avg_loss: 0.6138, acc: 0.7350 

epoch: 58 avg_loss: 0.6214, acc: 0.7296 

epoch: 59 avg_loss: 0.6147, acc: 0.7296 

epoch: 60 avg_loss: 0.6144, acc: 0.7307 

epoch: 61 avg_loss: 0.6085, acc: 0.7396 

epoch: 62 avg_loss: 0.6088, acc: 0.7336 

epoch: 63 avg_loss: 0.6151, acc: 0.7319 

epoch: 64 avg_loss: 0.6084, acc: 0.7353 

epoch: 65 avg_loss: 0.6074, acc: 0.7327 

epoch: 66 avg_loss: 0.6050, acc: 0.7293 

epoch: 67 avg_loss: 0.6074, acc: 0.7330 

epoch: 68 avg_loss: 0.6113, acc: 0.7310 

epoch: 69 avg_loss: 0.6005, acc: 0.7362 

epoch: 70 avg_loss: 0.6041, acc: 0.7367 

epoch: 71 avg_loss: 0.5974, acc: 0.7356 

epoch: 72 avg_loss: 0.6051, acc: 0.7350 

epoch: 73 avg_loss: 0.6020, acc: 0.7347 

epoch: 74 avg_loss: 0.5948, acc: 0.7385 

epoch: 75 avg_loss: 0.5968, acc: 0.7405 

epoch: 76 avg_loss: 0.5972, acc: 0.7362 

epoch: 77 avg_loss: 0.6003, acc: 0.7339 

epoch: 78 avg_loss: 0.6012, acc: 0.7324 

epoch: 79 avg_loss: 0.5931, acc: 0.7327 

epoch: 80 avg_loss: 0.6153, acc: 0.7273 

epoch: 81 avg_loss: 0.6076, acc: 0.7276 

epoch: 82 avg_loss: 0.6030, acc: 0.7330 

epoch: 83 avg_loss: 0.5869, acc: 0.7376 

epoch: 84 avg_loss: 0.6048, acc: 0.7307 

epoch: 85 avg_loss: 0.6040, acc: 0.7313 

epoch: 86 avg_loss: 0.5941, acc: 0.7362 

epoch: 87 avg_loss: 0.5887, acc: 0.7353 

epoch: 88 avg_loss: 0.5946, acc: 0.7353 

epoch: 89 avg_loss: 0.5917, acc: 0.7367 

epoch: 90 avg_loss: 0.5891, acc: 0.7402 

epoch: 91 avg_loss: 0.5931, acc: 0.7373 

epoch: 92 avg_loss: 0.5914, acc: 0.7370 

epoch: 93 avg_loss: 0.5890, acc: 0.7364 

epoch: 94 avg_loss: 0.5877, acc: 0.7376 

epoch: 95 avg_loss: 0.5951, acc: 0.7301 

epoch: 96 avg_loss: 0.5971, acc: 0.7339 

epoch: 97 avg_loss: 0.5973, acc: 0.7330 

epoch: 98 avg_loss: 0.5863, acc: 0.7370 

epoch: 99 avg_loss: 0.6092, acc: 0.7304 

epoch: 100 avg_loss: 0.5838, acc: 0.7402 

epoch: 101 avg_loss: 0.5845, acc: 0.7347 

epoch: 102 avg_loss: 0.5917, acc: 0.7347 

epoch: 103 avg_loss: 0.5949, acc: 0.7290 

epoch: 104 avg_loss: 0.5977, acc: 0.7267 

epoch: 105 avg_loss: 0.5942, acc: 0.7327 

epoch: 106 avg_loss: 0.5861, acc: 0.7410 

epoch: 107 avg_loss: 0.5832, acc: 0.7373 

epoch: 108 avg_loss: 0.5858, acc: 0.7342 

epoch: 109 avg_loss: 0.5863, acc: 0.7362 

epoch: 110 avg_loss: 0.5797, acc: 0.7396 

epoch: 111 avg_loss: 0.5815, acc: 0.7413 

epoch: 112 avg_loss: 0.5870, acc: 0.7347 

epoch: 113 avg_loss: 0.5902, acc: 0.7362 

epoch: 114 avg_loss: 0.5798, acc: 0.7390 

epoch: 115 avg_loss: 0.5871, acc: 0.7350 

epoch: 116 avg_loss: 0.5836, acc: 0.7336 

epoch: 117 avg_loss: 0.5789, acc: 0.7405 

epoch: 118 avg_loss: 0.5883, acc: 0.7344 

epoch: 119 avg_loss: 0.5810, acc: 0.7359 

epoch: 120 avg_loss: 0.5817, acc: 0.7364 

epoch: 121 avg_loss: 0.5765, acc: 0.7428 

epoch: 122 avg_loss: 0.5750, acc: 0.7393 

epoch: 123 avg_loss: 0.5806, acc: 0.7347 

epoch: 124 avg_loss: 0.5713, acc: 0.7419 

epoch: 125 avg_loss: 0.5740, acc: 0.7408 

epoch: 126 avg_loss: 0.5721, acc: 0.7408 

epoch: 127 avg_loss: 0.5776, acc: 0.7408 

epoch: 128 avg_loss: 0.5804, acc: 0.7419 

epoch: 129 avg_loss: 0.5772, acc: 0.7396 

epoch: 130 avg_loss: 0.5706, acc: 0.7405 

epoch: 131 avg_loss: 0.5774, acc: 0.7393 

epoch: 132 avg_loss: 0.5781, acc: 0.7385 

epoch: 133 avg_loss: 0.5760, acc: 0.7376 

epoch: 134 avg_loss: 0.5796, acc: 0.7339 

epoch: 135 avg_loss: 0.5784, acc: 0.7405 

epoch: 136 avg_loss: 0.5734, acc: 0.7419 

epoch: 137 avg_loss: 0.5680, acc: 0.7445 

epoch: 138 avg_loss: 0.5691, acc: 0.7399 

epoch: 139 avg_loss: 0.5662, acc: 0.7451 

epoch: 140 avg_loss: 0.5742, acc: 0.7376 

epoch: 141 avg_loss: 0.5733, acc: 0.7379 

epoch: 142 avg_loss: 0.5718, acc: 0.7413 

epoch: 143 avg_loss: 0.5671, acc: 0.7405 

epoch: 144 avg_loss: 0.5667, acc: 0.7410 

epoch: 145 avg_loss: 0.5654, acc: 0.7428 

epoch: 146 avg_loss: 0.5713, acc: 0.7350 

epoch: 147 avg_loss: 0.5628, acc: 0.7422 

epoch: 148 avg_loss: 0.5755, acc: 0.7339 

epoch: 149 avg_loss: 0.5758, acc: 0.7416 

epoch: 150 avg_loss: 0.5703, acc: 0.7376 

epoch: 151 avg_loss: 0.5623, acc: 0.7456 

epoch: 152 avg_loss: 0.5741, acc: 0.7364 

epoch: 153 avg_loss: 0.5677, acc: 0.7379 

epoch: 154 avg_loss: 0.5615, acc: 0.7471 

epoch: 155 avg_loss: 0.5722, acc: 0.7364 

epoch: 156 avg_loss: 0.5805, acc: 0.7359 

epoch: 157 avg_loss: 0.5659, acc: 0.7430 

epoch: 158 avg_loss: 0.5703, acc: 0.7350 

epoch: 159 avg_loss: 0.5719, acc: 0.7396 

epoch: 160 avg_loss: 0.5715, acc: 0.7448 

epoch: 161 avg_loss: 0.5683, acc: 0.7399 

epoch: 162 avg_loss: 0.5617, acc: 0.7413 

epoch: 163 avg_loss: 0.5540, acc: 0.7479 

epoch: 164 avg_loss: 0.5635, acc: 0.7413 

epoch: 165 avg_loss: 0.5663, acc: 0.7364 

epoch: 166 avg_loss: 0.5632, acc: 0.7448 

epoch: 167 avg_loss: 0.5624, acc: 0.7453 

epoch: 168 avg_loss: 0.5759, acc: 0.7347 

epoch: 169 avg_loss: 0.5741, acc: 0.7324 

epoch: 170 avg_loss: 0.5623, acc: 0.7448 

epoch: 171 avg_loss: 0.5640, acc: 0.7396 

epoch: 172 avg_loss: 0.5572, acc: 0.7465 

epoch: 173 avg_loss: 0.5591, acc: 0.7387 

epoch: 174 avg_loss: 0.5566, acc: 0.7465 

epoch: 175 avg_loss: 0.5617, acc: 0.7402 

epoch: 176 avg_loss: 0.5670, acc: 0.7402 

epoch: 177 avg_loss: 0.5589, acc: 0.7471 

epoch: 178 avg_loss: 0.5645, acc: 0.7339 

epoch: 179 avg_loss: 0.5558, acc: 0.7448 

epoch: 180 avg_loss: 0.5615, acc: 0.7465 

epoch: 181 avg_loss: 0.5766, acc: 0.7367 

epoch: 182 avg_loss: 0.5583, acc: 0.7451 

epoch: 183 avg_loss: 0.5734, acc: 0.7373 

epoch: 184 avg_loss: 0.5598, acc: 0.7439 

epoch: 185 avg_loss: 0.5613, acc: 0.7419 

epoch: 186 avg_loss: 0.5543, acc: 0.7471 

epoch: 187 avg_loss: 0.5596, acc: 0.7448 

epoch: 188 avg_loss: 0.5559, acc: 0.7419 

epoch: 189 avg_loss: 0.5570, acc: 0.7448 

epoch: 190 avg_loss: 0.5551, acc: 0.7425 

epoch: 191 avg_loss: 0.5606, acc: 0.7422 

epoch: 192 avg_loss: 0.5634, acc: 0.7376 

epoch: 193 avg_loss: 0.5575, acc: 0.7451 

epoch: 194 avg_loss: 0.5626, acc: 0.7465 

epoch: 195 avg_loss: 0.5552, acc: 0.7433 

epoch: 196 avg_loss: 0.5733, acc: 0.7313 

epoch: 197 avg_loss: 0.5854, acc: 0.7342 

epoch: 198 avg_loss: 0.5673, acc: 0.7370 

epoch: 199 avg_loss: 0.5652, acc: 0.7390 
