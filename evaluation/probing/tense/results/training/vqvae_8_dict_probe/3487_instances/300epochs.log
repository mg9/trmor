
number of params: 390 
Namespace(batchsize=128, beta=0.25, dec_dropout_in=0.0, dec_dropout_out=0.0, dec_nh=512, device='cuda', embedding_dim=512, enc_dropout_in=0.0, enc_dropout_out=0.0, enc_nh=512, epochs=300, fig_path='evaluation/probing/tense/results/training/vqvae_8_dict_probe/3487_instances/300epochs.png', log_path='evaluation/probing/tense/results/training/vqvae_8_dict_probe/3487_instances/300epochs.log', logger=<common.utils.Logger object at 0x7f8cf4c98c10>, lr=0.001, maxtrnsize=57769, maxtstsize=10000, maxvalsize=10000, mname='vqvae_8_dict_probe', model=VQVAE_Probe(
  (encoder): VQVAE_Encoder(
    (embed): Embedding(32, 256)
    (lstm): LSTM(256, 512, batch_first=True)
    (dropout_in): Dropout(p=0.0, inplace=False)
  )
  (linear_2): Linear(in_features=512, out_features=64, bias=True)
  (linear_3): Linear(in_features=512, out_features=64, bias=True)
  (linear_4): Linear(in_features=512, out_features=64, bias=True)
  (linear_5): Linear(in_features=512, out_features=64, bias=True)
  (linear_6): Linear(in_features=512, out_features=64, bias=True)
  (linear_7): Linear(in_features=512, out_features=64, bias=True)
  (linear_8): Linear(in_features=512, out_features=64, bias=True)
  (linear_9): Linear(in_features=512, out_features=64, bias=True)
  (vq_layer_2): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_3): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_4): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_5): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_6): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_7): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_8): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_9): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (linear): Linear(in_features=64, out_features=6, bias=True)
  (loss): CrossEntropyLoss()
), modelname='evaluation/probing/tense/results/training/vqvae_8_dict_probe/3487_instances/', nh=512, ni=256, num_embeddings=704, nz=512, opt='Adam', pretrained_model=VQVAE(
  (encoder): VQVAE_Encoder(
    (embed): Embedding(32, 256)
    (lstm): LSTM(256, 512, batch_first=True)
    (dropout_in): Dropout(p=0.0, inplace=False)
  )
  (linear_2): Linear(in_features=512, out_features=64, bias=True)
  (linear_3): Linear(in_features=512, out_features=64, bias=True)
  (linear_4): Linear(in_features=512, out_features=64, bias=True)
  (linear_5): Linear(in_features=512, out_features=64, bias=True)
  (linear_6): Linear(in_features=512, out_features=64, bias=True)
  (linear_7): Linear(in_features=512, out_features=64, bias=True)
  (linear_8): Linear(in_features=512, out_features=64, bias=True)
  (linear_9): Linear(in_features=512, out_features=64, bias=True)
  (vq_layer_2): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_3): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_4): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_5): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_6): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_7): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_8): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (vq_layer_9): VectorQuantizer(
    (embedding): Embedding(16, 64)
  )
  (decoder): VQVAE_Decoder(
    (embed): Embedding(32, 256, padding_idx=0)
    (dropout_in): Dropout(p=0.0, inplace=False)
    (dropout_out): Dropout(p=0.0, inplace=False)
    (lstm): LSTM(768, 512, batch_first=True)
    (pred_linear): Linear(in_features=512, out_features=32, bias=False)
    (loss): CrossEntropyLoss()
  )
), save_path='evaluation/probing/tense/results/training/vqvae_8_dict_probe/3487_instances/300epochs.pt', seq_to_no_pad='surface', task='surf2tense', trndata='evaluation/probing/tense/data/sosimple.new.trn.combined.txt', trnsize=3487, tstdata='evaluation/probing/tense/data/sosimple.new.seenroots.val.txt', tstsize=209, valdata='evaluation/probing/tense/data/sosimple.new.seenroots.val.txt', valsize=209)

encoder.embed.weight, torch.Size([32, 256]): False
encoder.lstm.weight_ih_l0, torch.Size([2048, 256]): False
encoder.lstm.weight_hh_l0, torch.Size([2048, 512]): False
encoder.lstm.bias_ih_l0, torch.Size([2048]): False
encoder.lstm.bias_hh_l0, torch.Size([2048]): False
linear_2.weight, torch.Size([64, 512]): False
linear_2.bias, torch.Size([64]): False
linear_3.weight, torch.Size([64, 512]): False
linear_3.bias, torch.Size([64]): False
linear_4.weight, torch.Size([64, 512]): False
linear_4.bias, torch.Size([64]): False
linear_5.weight, torch.Size([64, 512]): False
linear_5.bias, torch.Size([64]): False
linear_6.weight, torch.Size([64, 512]): False
linear_6.bias, torch.Size([64]): False
linear_7.weight, torch.Size([64, 512]): False
linear_7.bias, torch.Size([64]): False
linear_8.weight, torch.Size([64, 512]): False
linear_8.bias, torch.Size([64]): False
linear_9.weight, torch.Size([64, 512]): False
linear_9.bias, torch.Size([64]): False
vq_layer_2.embedding.weight, torch.Size([16, 64]): False
vq_layer_3.embedding.weight, torch.Size([16, 64]): False
vq_layer_4.embedding.weight, torch.Size([16, 64]): False
vq_layer_5.embedding.weight, torch.Size([16, 64]): False
vq_layer_6.embedding.weight, torch.Size([16, 64]): False
vq_layer_7.embedding.weight, torch.Size([16, 64]): False
vq_layer_8.embedding.weight, torch.Size([16, 64]): False
vq_layer_9.embedding.weight, torch.Size([16, 64]): False
linear.weight, torch.Size([6, 64]): True
linear.bias, torch.Size([6]): True
epoch: 0 avg_loss: 1.7448, acc: 0.2572 

epoch: 1 avg_loss: 1.6414, acc: 0.3330 

epoch: 2 avg_loss: 1.5940, acc: 0.3424 

epoch: 3 avg_loss: 1.5678, acc: 0.3180 

epoch: 4 avg_loss: 1.5468, acc: 0.3421 

epoch: 5 avg_loss: 1.5342, acc: 0.3539 

epoch: 6 avg_loss: 1.5222, acc: 0.3441 

epoch: 7 avg_loss: 1.5142, acc: 0.3484 

epoch: 8 avg_loss: 1.5117, acc: 0.3545 

epoch: 9 avg_loss: 1.5049, acc: 0.3473 

epoch: 10 avg_loss: 1.5006, acc: 0.3433 

epoch: 11 avg_loss: 1.4965, acc: 0.3438 

epoch: 12 avg_loss: 1.4958, acc: 0.3545 

epoch: 13 avg_loss: 1.4953, acc: 0.3545 

epoch: 14 avg_loss: 1.4912, acc: 0.3545 

epoch: 15 avg_loss: 1.4920, acc: 0.3550 

epoch: 16 avg_loss: 1.4868, acc: 0.3545 

epoch: 17 avg_loss: 1.4841, acc: 0.3545 

epoch: 18 avg_loss: 1.4813, acc: 0.3545 

epoch: 19 avg_loss: 1.4808, acc: 0.3545 

epoch: 20 avg_loss: 1.4812, acc: 0.3482 

epoch: 21 avg_loss: 1.4796, acc: 0.3553 

epoch: 22 avg_loss: 1.4818, acc: 0.3542 

epoch: 23 avg_loss: 1.4759, acc: 0.3453 

epoch: 24 avg_loss: 1.4805, acc: 0.3562 

epoch: 25 avg_loss: 1.4787, acc: 0.3545 

epoch: 26 avg_loss: 1.4754, acc: 0.3559 

epoch: 27 avg_loss: 1.4752, acc: 0.3539 

epoch: 28 avg_loss: 1.4751, acc: 0.3367 

epoch: 29 avg_loss: 1.4754, acc: 0.3651 

epoch: 30 avg_loss: 1.4753, acc: 0.3582 

epoch: 31 avg_loss: 1.4740, acc: 0.3645 

epoch: 32 avg_loss: 1.4718, acc: 0.3645 

epoch: 33 avg_loss: 1.4728, acc: 0.3651 

epoch: 34 avg_loss: 1.4749, acc: 0.3605 

epoch: 35 avg_loss: 1.4735, acc: 0.3611 

epoch: 36 avg_loss: 1.4733, acc: 0.3568 

epoch: 37 avg_loss: 1.4713, acc: 0.3599 

epoch: 38 avg_loss: 1.4703, acc: 0.3579 

epoch: 39 avg_loss: 1.4701, acc: 0.3651 

epoch: 40 avg_loss: 1.4702, acc: 0.3651 

epoch: 41 avg_loss: 1.4703, acc: 0.3579 

epoch: 42 avg_loss: 1.4734, acc: 0.3556 

epoch: 43 avg_loss: 1.4675, acc: 0.3633 

epoch: 44 avg_loss: 1.4676, acc: 0.3470 

epoch: 45 avg_loss: 1.4664, acc: 0.3651 

epoch: 46 avg_loss: 1.4684, acc: 0.3651 

epoch: 47 avg_loss: 1.4678, acc: 0.3651 

epoch: 48 avg_loss: 1.4665, acc: 0.3651 

epoch: 49 avg_loss: 1.4669, acc: 0.3633 

epoch: 50 avg_loss: 1.4661, acc: 0.3651 

epoch: 51 avg_loss: 1.4682, acc: 0.3573 

epoch: 52 avg_loss: 1.4669, acc: 0.3651 

epoch: 53 avg_loss: 1.4662, acc: 0.3651 

epoch: 54 avg_loss: 1.4671, acc: 0.3651 

epoch: 55 avg_loss: 1.4667, acc: 0.3530 

epoch: 56 avg_loss: 1.4686, acc: 0.3651 

epoch: 57 avg_loss: 1.4686, acc: 0.3651 

epoch: 58 avg_loss: 1.4644, acc: 0.3588 

epoch: 59 avg_loss: 1.4669, acc: 0.3651 

epoch: 60 avg_loss: 1.4683, acc: 0.3651 

epoch: 61 avg_loss: 1.4642, acc: 0.3651 

epoch: 62 avg_loss: 1.4646, acc: 0.3651 

epoch: 63 avg_loss: 1.4692, acc: 0.3651 

epoch: 64 avg_loss: 1.4627, acc: 0.3611 

epoch: 65 avg_loss: 1.4659, acc: 0.3536 

epoch: 66 avg_loss: 1.4672, acc: 0.3651 

epoch: 67 avg_loss: 1.4643, acc: 0.3651 

epoch: 68 avg_loss: 1.4655, acc: 0.3651 

epoch: 69 avg_loss: 1.4650, acc: 0.3636 

epoch: 70 avg_loss: 1.4651, acc: 0.3570 

epoch: 71 avg_loss: 1.4637, acc: 0.3651 

epoch: 72 avg_loss: 1.4644, acc: 0.3602 

epoch: 73 avg_loss: 1.4675, acc: 0.3611 

epoch: 74 avg_loss: 1.4632, acc: 0.3628 

epoch: 75 avg_loss: 1.4631, acc: 0.3622 

epoch: 76 avg_loss: 1.4627, acc: 0.3651 

epoch: 77 avg_loss: 1.4641, acc: 0.3464 

epoch: 78 avg_loss: 1.4637, acc: 0.3556 

epoch: 79 avg_loss: 1.4662, acc: 0.3373 

epoch: 80 avg_loss: 1.4628, acc: 0.3651 

epoch: 81 avg_loss: 1.4629, acc: 0.3651 

epoch: 82 avg_loss: 1.4646, acc: 0.3433 

epoch: 83 avg_loss: 1.4631, acc: 0.3533 

epoch: 84 avg_loss: 1.4666, acc: 0.3628 

epoch: 85 avg_loss: 1.4619, acc: 0.3525 

epoch: 86 avg_loss: 1.4653, acc: 0.3484 

epoch: 87 avg_loss: 1.4607, acc: 0.3651 

epoch: 88 avg_loss: 1.4609, acc: 0.3651 

epoch: 89 avg_loss: 1.4627, acc: 0.3533 

epoch: 90 avg_loss: 1.4640, acc: 0.3605 

epoch: 91 avg_loss: 1.4609, acc: 0.3513 

epoch: 92 avg_loss: 1.4615, acc: 0.3651 

epoch: 93 avg_loss: 1.4657, acc: 0.3613 

epoch: 94 avg_loss: 1.4623, acc: 0.3639 

epoch: 95 avg_loss: 1.4616, acc: 0.3401 

epoch: 96 avg_loss: 1.4647, acc: 0.3539 

epoch: 97 avg_loss: 1.4630, acc: 0.3576 

epoch: 98 avg_loss: 1.4596, acc: 0.3479 

epoch: 99 avg_loss: 1.4587, acc: 0.3553 

epoch: 100 avg_loss: 1.4626, acc: 0.3631 

epoch: 101 avg_loss: 1.4601, acc: 0.3651 

epoch: 102 avg_loss: 1.4646, acc: 0.3611 

epoch: 103 avg_loss: 1.4601, acc: 0.3590 

epoch: 104 avg_loss: 1.4606, acc: 0.3628 

epoch: 105 avg_loss: 1.4625, acc: 0.3582 

epoch: 106 avg_loss: 1.4616, acc: 0.3533 

epoch: 107 avg_loss: 1.4630, acc: 0.3570 

epoch: 108 avg_loss: 1.4610, acc: 0.3450 

epoch: 109 avg_loss: 1.4599, acc: 0.3476 

epoch: 110 avg_loss: 1.4609, acc: 0.3522 

epoch: 111 avg_loss: 1.4604, acc: 0.3651 

epoch: 112 avg_loss: 1.4615, acc: 0.3384 

epoch: 113 avg_loss: 1.4611, acc: 0.3381 

epoch: 114 avg_loss: 1.4582, acc: 0.3565 

epoch: 115 avg_loss: 1.4600, acc: 0.3579 

epoch: 116 avg_loss: 1.4608, acc: 0.3530 

epoch: 117 avg_loss: 1.4601, acc: 0.3416 

epoch: 118 avg_loss: 1.4594, acc: 0.3622 

epoch: 119 avg_loss: 1.4607, acc: 0.3596 

epoch: 120 avg_loss: 1.4577, acc: 0.3651 

epoch: 121 avg_loss: 1.4616, acc: 0.3651 

epoch: 122 avg_loss: 1.4580, acc: 0.3642 

epoch: 123 avg_loss: 1.4603, acc: 0.3522 

epoch: 124 avg_loss: 1.4600, acc: 0.3613 

epoch: 125 avg_loss: 1.4599, acc: 0.3570 

epoch: 126 avg_loss: 1.4572, acc: 0.3513 

epoch: 127 avg_loss: 1.4579, acc: 0.3599 

epoch: 128 avg_loss: 1.4605, acc: 0.3510 

epoch: 129 avg_loss: 1.4583, acc: 0.3450 

epoch: 130 avg_loss: 1.4630, acc: 0.3493 

epoch: 131 avg_loss: 1.4597, acc: 0.3522 

epoch: 132 avg_loss: 1.4588, acc: 0.3441 

epoch: 133 avg_loss: 1.4569, acc: 0.3616 

epoch: 134 avg_loss: 1.4599, acc: 0.3459 

epoch: 135 avg_loss: 1.4604, acc: 0.3467 

epoch: 136 avg_loss: 1.4591, acc: 0.3550 

epoch: 137 avg_loss: 1.4571, acc: 0.3530 

epoch: 138 avg_loss: 1.4606, acc: 0.3622 

epoch: 139 avg_loss: 1.4595, acc: 0.3613 

epoch: 140 avg_loss: 1.4559, acc: 0.3616 

epoch: 141 avg_loss: 1.4609, acc: 0.3470 

epoch: 142 avg_loss: 1.4605, acc: 0.3545 

epoch: 143 avg_loss: 1.4581, acc: 0.3444 

epoch: 144 avg_loss: 1.4570, acc: 0.3516 

epoch: 145 avg_loss: 1.4607, acc: 0.3613 

epoch: 146 avg_loss: 1.4602, acc: 0.3539 

epoch: 147 avg_loss: 1.4595, acc: 0.3347 

epoch: 148 avg_loss: 1.4557, acc: 0.3539 

epoch: 149 avg_loss: 1.4578, acc: 0.3504 

epoch: 150 avg_loss: 1.4603, acc: 0.3375 

epoch: 151 avg_loss: 1.4587, acc: 0.3539 

epoch: 152 avg_loss: 1.4568, acc: 0.3593 

epoch: 153 avg_loss: 1.4598, acc: 0.3410 

epoch: 154 avg_loss: 1.4575, acc: 0.3605 

epoch: 155 avg_loss: 1.4649, acc: 0.3416 

epoch: 156 avg_loss: 1.4585, acc: 0.3493 

epoch: 157 avg_loss: 1.4582, acc: 0.3482 

epoch: 158 avg_loss: 1.4573, acc: 0.3579 

epoch: 159 avg_loss: 1.4592, acc: 0.3628 

epoch: 160 avg_loss: 1.4595, acc: 0.3559 

epoch: 161 avg_loss: 1.4578, acc: 0.3507 

epoch: 162 avg_loss: 1.4577, acc: 0.3504 

epoch: 163 avg_loss: 1.4578, acc: 0.3542 

epoch: 164 avg_loss: 1.4582, acc: 0.3545 

epoch: 165 avg_loss: 1.4592, acc: 0.3539 

epoch: 166 avg_loss: 1.4559, acc: 0.3622 

epoch: 167 avg_loss: 1.4576, acc: 0.3504 

epoch: 168 avg_loss: 1.4588, acc: 0.3235 

epoch: 169 avg_loss: 1.4574, acc: 0.3513 

epoch: 170 avg_loss: 1.4586, acc: 0.3631 

epoch: 171 avg_loss: 1.4563, acc: 0.3487 

epoch: 172 avg_loss: 1.4561, acc: 0.3496 

epoch: 173 avg_loss: 1.4566, acc: 0.3516 

epoch: 174 avg_loss: 1.4565, acc: 0.3550 

epoch: 175 avg_loss: 1.4590, acc: 0.3373 

epoch: 176 avg_loss: 1.4540, acc: 0.3539 

epoch: 177 avg_loss: 1.4588, acc: 0.3493 

epoch: 178 avg_loss: 1.4586, acc: 0.3622 

epoch: 179 avg_loss: 1.4583, acc: 0.3384 

epoch: 180 avg_loss: 1.4570, acc: 0.3464 

epoch: 181 avg_loss: 1.4602, acc: 0.3536 

epoch: 182 avg_loss: 1.4574, acc: 0.3568 

epoch: 183 avg_loss: 1.4577, acc: 0.3504 

epoch: 184 avg_loss: 1.4549, acc: 0.3525 

epoch: 185 avg_loss: 1.4555, acc: 0.3510 

epoch: 186 avg_loss: 1.4553, acc: 0.3553 

epoch: 187 avg_loss: 1.4554, acc: 0.3579 

epoch: 188 avg_loss: 1.4597, acc: 0.3473 

epoch: 189 avg_loss: 1.4567, acc: 0.3507 

epoch: 190 avg_loss: 1.4571, acc: 0.3568 

epoch: 191 avg_loss: 1.4557, acc: 0.3510 

epoch: 192 avg_loss: 1.4549, acc: 0.3556 

epoch: 193 avg_loss: 1.4582, acc: 0.3436 

epoch: 194 avg_loss: 1.4556, acc: 0.3539 

epoch: 195 avg_loss: 1.4578, acc: 0.3599 

epoch: 196 avg_loss: 1.4586, acc: 0.3344 

epoch: 197 avg_loss: 1.4555, acc: 0.3539 

epoch: 198 avg_loss: 1.4551, acc: 0.3539 

epoch: 199 avg_loss: 1.4553, acc: 0.3539 

epoch: 200 avg_loss: 1.4584, acc: 0.3502 

epoch: 201 avg_loss: 1.4551, acc: 0.3482 

epoch: 202 avg_loss: 1.4548, acc: 0.3639 

epoch: 203 avg_loss: 1.4607, acc: 0.3510 

epoch: 204 avg_loss: 1.4577, acc: 0.3539 

epoch: 205 avg_loss: 1.4606, acc: 0.3393 

epoch: 206 avg_loss: 1.4587, acc: 0.3522 

epoch: 207 avg_loss: 1.4579, acc: 0.3616 

epoch: 208 avg_loss: 1.4545, acc: 0.3545 

epoch: 209 avg_loss: 1.4566, acc: 0.3539 

epoch: 210 avg_loss: 1.4564, acc: 0.3504 

epoch: 211 avg_loss: 1.4560, acc: 0.3438 

epoch: 212 avg_loss: 1.4565, acc: 0.3413 

epoch: 213 avg_loss: 1.4562, acc: 0.3499 

epoch: 214 avg_loss: 1.4561, acc: 0.3464 

epoch: 215 avg_loss: 1.4563, acc: 0.3424 

epoch: 216 avg_loss: 1.4576, acc: 0.3585 

epoch: 217 avg_loss: 1.4541, acc: 0.3545 

epoch: 218 avg_loss: 1.4597, acc: 0.3352 

epoch: 219 avg_loss: 1.4675, acc: 0.3438 

epoch: 220 avg_loss: 1.4518, acc: 0.3539 

epoch: 221 avg_loss: 1.4551, acc: 0.3519 

epoch: 222 avg_loss: 1.4567, acc: 0.3427 

epoch: 223 avg_loss: 1.4550, acc: 0.3542 

epoch: 224 avg_loss: 1.4546, acc: 0.3559 

epoch: 225 avg_loss: 1.4590, acc: 0.3373 

epoch: 226 avg_loss: 1.4577, acc: 0.3436 

epoch: 227 avg_loss: 1.4563, acc: 0.3510 

epoch: 228 avg_loss: 1.4541, acc: 0.3499 

epoch: 229 avg_loss: 1.4584, acc: 0.3467 

epoch: 230 avg_loss: 1.4554, acc: 0.3401 

epoch: 231 avg_loss: 1.4536, acc: 0.3539 

epoch: 232 avg_loss: 1.4560, acc: 0.3413 

epoch: 233 avg_loss: 1.4548, acc: 0.3539 

epoch: 234 avg_loss: 1.4553, acc: 0.3539 

epoch: 235 avg_loss: 1.4528, acc: 0.3502 

epoch: 236 avg_loss: 1.4558, acc: 0.3593 

epoch: 237 avg_loss: 1.4572, acc: 0.3499 

epoch: 238 avg_loss: 1.4567, acc: 0.3441 

epoch: 239 avg_loss: 1.4588, acc: 0.3599 

epoch: 240 avg_loss: 1.4582, acc: 0.3519 

epoch: 241 avg_loss: 1.4562, acc: 0.3459 

epoch: 242 avg_loss: 1.4574, acc: 0.3539 

epoch: 243 avg_loss: 1.4543, acc: 0.3539 

epoch: 244 avg_loss: 1.4525, acc: 0.3499 

epoch: 245 avg_loss: 1.4567, acc: 0.3493 

epoch: 246 avg_loss: 1.4534, acc: 0.3539 

epoch: 247 avg_loss: 1.4548, acc: 0.3708 

epoch: 248 avg_loss: 1.4577, acc: 0.3559 

epoch: 249 avg_loss: 1.4555, acc: 0.3441 

epoch: 250 avg_loss: 1.4537, acc: 0.3476 

epoch: 251 avg_loss: 1.4575, acc: 0.3309 

epoch: 252 avg_loss: 1.4557, acc: 0.3559 

epoch: 253 avg_loss: 1.4582, acc: 0.3593 

epoch: 254 avg_loss: 1.4523, acc: 0.3565 

epoch: 255 avg_loss: 1.4565, acc: 0.3539 

epoch: 256 avg_loss: 1.4537, acc: 0.3539 

epoch: 257 avg_loss: 1.4572, acc: 0.3467 

epoch: 258 avg_loss: 1.4533, acc: 0.3536 

epoch: 259 avg_loss: 1.4556, acc: 0.3470 

epoch: 260 avg_loss: 1.4565, acc: 0.3361 

epoch: 261 avg_loss: 1.4541, acc: 0.3533 

epoch: 262 avg_loss: 1.4544, acc: 0.3553 

epoch: 263 avg_loss: 1.4543, acc: 0.3539 

epoch: 264 avg_loss: 1.4546, acc: 0.3381 

epoch: 265 avg_loss: 1.4572, acc: 0.3562 

epoch: 266 avg_loss: 1.4552, acc: 0.3536 

epoch: 267 avg_loss: 1.4545, acc: 0.3525 

epoch: 268 avg_loss: 1.4553, acc: 0.3438 

epoch: 269 avg_loss: 1.4545, acc: 0.3470 

epoch: 270 avg_loss: 1.4549, acc: 0.3539 

epoch: 271 avg_loss: 1.4548, acc: 0.3456 

epoch: 272 avg_loss: 1.4544, acc: 0.3562 

epoch: 273 avg_loss: 1.4549, acc: 0.3539 

epoch: 274 avg_loss: 1.4538, acc: 0.3611 

epoch: 275 avg_loss: 1.4567, acc: 0.3461 

epoch: 276 avg_loss: 1.4538, acc: 0.3542 

epoch: 277 avg_loss: 1.4567, acc: 0.3364 

epoch: 278 avg_loss: 1.4538, acc: 0.3482 

epoch: 279 avg_loss: 1.4564, acc: 0.3579 

epoch: 280 avg_loss: 1.4564, acc: 0.3570 

epoch: 281 avg_loss: 1.4527, acc: 0.3519 

epoch: 282 avg_loss: 1.4561, acc: 0.3390 

epoch: 283 avg_loss: 1.4534, acc: 0.3461 

epoch: 284 avg_loss: 1.4569, acc: 0.3436 

epoch: 285 avg_loss: 1.4551, acc: 0.3438 

epoch: 286 avg_loss: 1.4528, acc: 0.3395 

epoch: 287 avg_loss: 1.4558, acc: 0.3525 

epoch: 288 avg_loss: 1.4550, acc: 0.3461 

epoch: 289 avg_loss: 1.4559, acc: 0.3387 

epoch: 290 avg_loss: 1.4567, acc: 0.3430 

epoch: 291 avg_loss: 1.4562, acc: 0.3616 
